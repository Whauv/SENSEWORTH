import csv
import pandas as pd
interesting_cols = [0, 2, 3, 4, 5]

with open("Fake.csv", 'r') as file1, open("True.csv", 'r') as file2:
    reader1, reader2 = csv.reader(file1), csv.reader(file2)

    for line1, line2 in zip(reader1, reader2):
        equal = all(x == y for n, (x, y) in enumerate(
            zip(line1, line2)) if n in interesting_cols)

        prediction = str(equal)

        with open('E:\Web App\Prediction.csv', 'w', encoding='UTF8', newline='') as f:
            # create the csv writer
            writer = csv.writer(
                f, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
            writer.writerow([prediction])
